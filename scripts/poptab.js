// Generated by CoffeeScript 2.3.1
// Description:
//   Track your running pop consumption
//
// Dependencies:
//   None
//
// Configuration:
//   None
//
// Commands:
//   hubot pop me - Add a pop to your tab
//   hubot pop tab - Print out your tab
//   hubot pop clear - Clears your tab
//
// Author:
//   Ryan

var PopTab;

PopTab = class PopTab {
  constructor(robot1) {
    this.robot = robot1;
    this.cache = {};
    this.increment_response = "WE HAVE LOGGED YOUR CONSUMPTION OF ONE POP.";
    this.tab_response = ["YOU HAVE CONSUMED", "POPS AND OWE $"];
    this.clear_response = "WE HAVE ASSIMILATED YOUR POP CONSUMPTION AND DEBT.";
    this.robot.brain.on('loaded', () => {
      if (this.robot.brain.data.poptab) {
        return this.cache = this.robot.brain.data.poptab;
      }
    });
  }

  increment(user) {
    var base;
    if ((base = this.cache)[user] == null) {
      base[user] = 0;
    }
    this.cache[user] += 1;
    this.robot.brain.data.poptab = this.cache;
  }

  tabulate(user) {
    var pops, tab;
    pops = this.cache[user] ? this.cache[user] : 0;
    tab = pops * 0.50;
    if (tab % 1 !== 0) {
      tab += "0";
    } else {
      tab += ".00";
    }
    return tab;
  }

  clear(user) {
    delete this.cache[user];
    this.robot.brain.data.poptab = this.cache;
  }

  get(user) {
    if (this.cache[user]) {
      return this.cache[user];
    } else {
      return 0;
    }
  }

};

module.exports = function(robot) {
  var poptab;
  poptab = new PopTab(robot);
  robot.respond(/pop me/i, function(msg) {
    var user;
    user = msg.message.user.name.toLowerCase();
    poptab.increment(user);
    return msg.reply(poptab.increment_response);
  });
  robot.respond(/pop tab/i, function(msg) {
    var mesg_response, user;
    mesg_response = [];
    mesg_response.push(poptab.tab_response[0]);
    user = msg.message.user.name.toLowerCase();
    mesg_response.push(poptab.get(user));
    mesg_response.push(poptab.tab_response[1]);
    mesg_response.push(poptab.tabulate(user));
    return msg.reply(mesg_response.join(" "));
  });
  return robot.respond(/pop clear/i, function(msg) {
    var user;
    user = msg.message.user.name.toLowerCase();
    poptab.clear(user);
    return msg.reply(poptab.clear_response);
  });
};
