// Generated by CoffeeScript 2.3.1
// Description:
//   Store a quote from a user, repeat it back to them at random times out of context.
//   Has a 1 in 200 (ish?) chance of delivering a quote whenever a person speaks.
//
// Dependencies:
//   None
//
// Configuration:
//   None
//
// Commands:
//   hubot outofcontext <user name>: <message> - add a quote for a user
//   hubot ooc <user name>: <message> - add a quote for a user
//   hubot outofcontext rm <user name>: <message> - remove a quote for a user
//   hubot ooc rm <user name>: <message> - remove a quote for a user
//
// Author:
//   robotmay (Borg'd by ryan)

var appendQuote, findUser, removeQuote;

appendQuote = function(data, user, message) {
  var name1;
  data[name1 = user.name] || (data[name1] = []);
  return data[user.name].push(message);
};

removeQuote = function(data, user, message) {
  var index;
  index = data[user.name].indexOf(message);
  return data[user.name] = data[user.name].slice(index, 1);
};

findUser = function(robot, msg, name, callback) {
  var user, users;
  users = robot.brain.usersForFuzzyName(name.trim());
  if (users.length === 1) {
    user = users[0];
    return callback(user);
  } else if (users.length > 1) {
    return msg.send(`WE HAVE ASSIMILATED MILLIONS. WE KNOW TOO MANY ${name.toUpperCase}.`);
  } else {
    return msg.send(`WE HAVE YET TO ASSIMILATE ${name.toUpperCase}.`);
  }
};

module.exports = function(robot) {
  robot.brain.on('loaded', () => {
    var base;
    return (base = robot.brain.data).oocQuotes || (base.oocQuotes = {});
  });
  robot.respond(/outofcontext|ooc (?!rm )(.*?): (.*)/i, function(msg) {
    return findUser(robot, msg, msg.match[1], function(user) {
      appendQuote(robot.brain.data.oocQuotes, user, msg.match[2]);
      return msg.send("THE QUOTE HAS BEEN ASSIMILATED FOR FUTURE APPLICATION.");
    });
  });
  robot.respond(/outofcontext|ooc rm (.*?): (.*)/i, function(msg) {
    return findUser(robot, msg, msg.match[1], function(user) {
      removeQuote(robot.brain.data.oocQuotes, user, msg.match[2]);
      return msg.send("WE HAVE ELIMINATED THE IRRELEVANT QUOTE FROM OUR RECORDS.");
    });
  });
  return robot.hear(/./i, function(msg) {
    var quotes, randomQuote;
    if (robot.brain.data.oocQuotes == null) {
      return;
    }
    if ((quotes = robot.brain.data.oocQuotes[msg.message.user.name])) {
      randomQuote = quotes[Math.floor(Math.random() * quotes.length)];
      if (Math.floor(Math.random() * 200) === 42) {
        return msg.send(`"${randomQuote}" - ${msg.message.user.name}`);
      }
    }
  });
};
